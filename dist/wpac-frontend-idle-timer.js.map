{"version":3,"file":"wpac-frontend-idle-timer.js","mappings":"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","sources":["webpack://wp-ajaxify-comments/./src/js/frontend/idle-timer.js"],"sourcesContent":["/*! Idle Timer - v1.1.1 - 2020-06-25\n* https://github.com/thorst/jquery-idletimer\n* Copyright (c) 2020 Paul Irish; Licensed MIT */\n/*\n\tmousewheel (deprecated) -> IE6.0, Chrome, Opera, Safari\n\tDOMMouseScroll (deprecated) -> Firefox 1.0\n\twheel (standard) -> Chrome 31, Firefox 17, IE9, Firefox Mobile 17.0\n\n\t//No need to use, use DOMMouseScroll\n\tMozMousePixelScroll -> Firefox 3.5, Firefox Mobile 1.0\n\n\t//Events\n\tWheelEvent -> see wheel\n\tMouseWheelEvent -> see mousewheel\n\tMouseScrollEvent -> Firefox 3.5, Firefox Mobile 1.0\n*/\n(function ($) {\n\n    $.idleTimer = function (firstParam, elem) {\n        var opts;\n        if ( typeof firstParam === \"object\" ) {\n            opts = firstParam;\n            firstParam = null;\n        } else if (typeof firstParam === \"number\") {\n            opts = { timeout: firstParam };\n            firstParam = null;\n        }\n\n        // element to watch\n        elem = elem || document;\n\n        // defaults that are to be stored as instance props on the elem\n        opts = $.extend({\n            idle: false,                // indicates if the user is idle\n            timeout: 30000,             // the amount of time (ms) before the user is considered idle\n            events: \"mousemove keydown wheel DOMMouseScroll mousewheel mousedown touchstart touchmove MSPointerDown MSPointerMove\" // define active events\n        }, opts);\n\n        var jqElem = $(elem),\n            obj = jqElem.data(\"idleTimerObj\") || {},\n\n            /* (intentionally not documented)\n             * Toggles the idle state and fires an appropriate event.\n             * @return {void}\n             */\n            toggleIdleState = function (e) {\n                var obj = $.data(elem, \"idleTimerObj\") || {};\n\n                // toggle the state\n                obj.idle = !obj.idle;\n\n                // store toggle state date time\n                obj.olddate = +new Date();\n\n                // create a custom event, with state and name space\n                var event = $.Event((obj.idle ? \"idle\" : \"active\") + \".idleTimer\");\n\n                // trigger event on object with elem and copy of obj\n                $(elem).trigger(event, [elem, $.extend({}, obj), e]);\n            },\n            /**\n             * Handle event triggers\n             * @return {void}\n             * @method event\n             * @static\n             */\n            handleEvent = function (e) {\n                var obj = $.data(elem, \"idleTimerObj\") || {};\n\n\t\t// ignore writting to storage unless related to idleTimer\n                if (e.type === \"storage\" && e.originalEvent.key !== obj.timerSyncId) {\n                    return;\n                }\n\n                // this is already paused, ignore events for now\n                if (obj.remaining != null) { return; }\n\n                /*\n                mousemove is kinda buggy, it can be triggered when it should be idle.\n                Typically is happening between 115 - 150 milliseconds after idle triggered.\n                @psyafter & @kaellis report \"always triggered if using modal (jQuery ui, with overlay)\"\n                @thorst has similar issues on ios7 \"after $.scrollTop() on text area\"\n                */\n                if (e.type === \"mousemove\") {\n                    // if coord are same, it didn't move\n                    if (e.pageX === obj.pageX && e.pageY === obj.pageY) {\n                        return;\n                    }\n                    // if coord don't exist how could it move\n                    if (typeof e.pageX === \"undefined\" && typeof e.pageY === \"undefined\") {\n                        return;\n                    }\n                    // under 200 ms is hard to do, and you would have to stop, as continuous activity will bypass this\n                    var elapsed = (+new Date()) - obj.olddate;\n                    if (elapsed < 200) {\n                        return;\n                    }\n                }\n\n                // clear any existing timeout\n                clearTimeout(obj.tId);\n\n                // if the idle timer is enabled, flip\n                if (obj.idle) {\n                    toggleIdleState(e);\n                }\n\n                // store when user was last active\n                obj.lastActive = +new Date();\n\n                // update mouse coord\n                obj.pageX = e.pageX;\n                obj.pageY = e.pageY;\n\n                // sync lastActive\n                if (e.type !== \"storage\" && obj.timerSyncId) {\n                  if (typeof(localStorage) !== \"undefined\") {\n                    localStorage.setItem(obj.timerSyncId, obj.lastActive);\n                  }\n                }\n\n                // set a new timeout\n                obj.tId = setTimeout(toggleIdleState, obj.timeout);\n            },\n            /**\n             * Restore initial settings and restart timer\n             * @return {void}\n             * @method reset\n             * @static\n             */\n            reset = function () {\n\n                var obj = $.data(elem, \"idleTimerObj\") || {};\n\n                // reset settings\n                obj.idle = obj.idleBackup;\n                obj.olddate = +new Date();\n                obj.lastActive = obj.olddate;\n                obj.remaining = null;\n\n                // reset Timers\n                clearTimeout(obj.tId);\n                if (!obj.idle) {\n                    obj.tId = setTimeout(toggleIdleState, obj.timeout);\n                }\n\n            },\n            /**\n             * Store remaining time, stop timer\n             * You can pause from an idle OR active state\n             * @return {void}\n             * @method pause\n             * @static\n             */\n            pause = function () {\n\n                var obj = $.data(elem, \"idleTimerObj\") || {};\n\n                // this is already paused\n                if ( obj.remaining != null ) { return; }\n\n                // define how much is left on the timer\n                obj.remaining = obj.timeout - ((+new Date()) - obj.olddate);\n\n                // clear any existing timeout\n                clearTimeout(obj.tId);\n            },\n            /**\n             * Start timer with remaining value\n             * @return {void}\n             * @method resume\n             * @static\n             */\n            resume = function () {\n\n                var obj = $.data(elem, \"idleTimerObj\") || {};\n\n                // this isn't paused yet\n                if ( obj.remaining == null ) { return; }\n\n                // start timer\n                if ( !obj.idle ) {\n                    obj.tId = setTimeout(toggleIdleState, obj.remaining);\n                }\n\n                // clear remaining\n                obj.remaining = null;\n            },\n            /**\n             * Stops the idle timer. This removes appropriate event handlers\n             * and cancels any pending timeouts.\n             * @return {void}\n             * @method destroy\n             * @static\n             */\n            destroy = function () {\n\n                var obj = $.data(elem, \"idleTimerObj\") || {};\n\n                //clear any pending timeouts\n                clearTimeout(obj.tId);\n\n                //Remove data\n                jqElem.removeData(\"idleTimerObj\");\n\n                //detach the event handlers\n                jqElem.off(\"._idleTimer\");\n            },\n            /**\n            * Returns the time until becoming idle\n            * @return {number}\n            * @method remainingtime\n            * @static\n            */\n            remainingtime = function () {\n\n                var obj = $.data(elem, \"idleTimerObj\") || {};\n\n                //If idle there is no time remaining\n                if ( obj.idle ) { return 0; }\n\n                //If its paused just return that\n                if ( obj.remaining != null ) { return obj.remaining; }\n\n                //Determine remaining, if negative idle didn't finish flipping, just return 0\n                var remaining = obj.timeout - ((+new Date()) - obj.lastActive);\n                if (remaining < 0) { remaining = 0; }\n\n                //If this is paused return that number, else return current remaining\n                return remaining;\n            };\n\n\n        // determine which function to call\n        if (firstParam === null && typeof obj.idle !== \"undefined\") {\n            // they think they want to init, but it already is, just reset\n            reset();\n            return jqElem;\n        } else if (firstParam === null) {\n            // they want to init\n        } else if (firstParam !== null && typeof obj.idle === \"undefined\") {\n            // they want to do something, but it isnt init\n            // not sure the best way to handle this\n            return false;\n        } else if (firstParam === \"destroy\") {\n            destroy();\n            return jqElem;\n        } else if (firstParam === \"pause\") {\n            pause();\n            return jqElem;\n        } else if (firstParam === \"resume\") {\n            resume();\n            return jqElem;\n        } else if (firstParam === \"reset\") {\n            reset();\n            return jqElem;\n        } else if (firstParam === \"getRemainingTime\") {\n            return remainingtime();\n        } else if (firstParam === \"getElapsedTime\") {\n            return (+new Date()) - obj.olddate;\n        } else if (firstParam === \"getLastActiveTime\") {\n            return obj.lastActive;\n        } else if (firstParam === \"isIdle\") {\n            return obj.idle;\n        }\n\n\t// Test via a getter in the options object to see if the passive property is accessed\n\t// This isnt working in jquery, though is planned for 4.0\n\t// https://github.com/jquery/jquery/issues/2871\n        /*var supportsPassive = false;\n        try {\n            var Popts = Object.defineProperty({}, \"passive\", {\n                get: function() {\n                    supportsPassive = true;\n                }\n            });\n            window.addEventListener(\"test\", null, Popts);\n        } catch (e) {}\n\t*/\n\n        /* (intentionally not documented)\n         * Handles a user event indicating that the user isn't idle. namespaced with internal idleTimer\n         * @param {Event} event A DOM2-normalized event object.\n         * @return {void}\n         */\n        jqElem.on((opts.events + \" \").split(\" \").join(\"._idleTimer \").trim(), function (e) {\n            handleEvent(e);\n        });\n        //}, supportsPassive ? { passive: true } : false);\n\n        if (opts.timerSyncId) {\n            $(window).on(\"storage\", handleEvent);\n        }\n\n        // Internal Object Properties, This isn't all necessary, but we\n        // explicitly define all keys here so we know what we are working with\n        obj = $.extend({}, {\n            olddate : +new Date(),          // the last time state changed\n            lastActive: +new Date(),       // the last time timer was active\n            idle : opts.idle,               // current state\n            idleBackup : opts.idle,         // backup of idle parameter since it gets modified\n            timeout : opts.timeout,         // the interval to change state\n            remaining : null,               // how long until state changes\n            timerSyncId : opts.timerSyncId, // localStorage key to use for syncing this timer\n            tId : null,                     // the idle timer setTimeout\n            pageX : null,                   // used to store the mouse coord\n            pageY : null\n        });\n\n        // set a timeout to toggle state. May wish to omit this in some situations\n        if (!obj.idle) {\n            obj.tId = setTimeout(toggleIdleState, obj.timeout);\n        }\n\n        // store our instance on the object\n        $.data(elem, \"idleTimerObj\", obj);\n\n        return jqElem;\n    };\n\n    // This allows binding to element\n    $.fn.idleTimer = function (firstParam) {\n        if (this[0]) {\n            return $.idleTimer(firstParam, this[0]);\n        }\n\n        return this;\n    };\n\n})(jQuery);"],"names":["$","idleTimer","firstParam","elem","opts","_typeof","timeout","document","extend","idle","events","jqElem","obj","data","toggleIdleState","e","olddate","Date","event","Event","trigger","handleEvent","type","originalEvent","key","timerSyncId","remaining","pageX","pageY","elapsed","clearTimeout","tId","lastActive","localStorage","setItem","setTimeout","reset","idleBackup","pause","resume","destroy","removeData","off","remainingtime","on","split","join","trim","window","fn","jQuery"],"sourceRoot":""}